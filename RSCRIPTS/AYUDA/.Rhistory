source('C:/Users/JuanFernando/OneDrive/Machine Learning/SURA/RSCRIPTS/AYUDA/tiposDatos.R')
# -----------------------------------------------------------------
# Tipos de datos simples
# -----------------------------------------------------------------
class(45)
class(34.5)
class("R")
class(TRUE)
class(Inf)
class(1+2i)
class(NaN)
typeof(45)
typeof(34.5)
typeof("R")
typeof(TRUE)
typeof(Inf)
typeof(1+2i)
typeof(NaN)
# -----------------------------------------------------------------
# Asignaci?n de valores a variables
# -----------------------------------------------------------------
a <- 45
a
a = 3.1416
a
"Hola" -> a
a
is.integer(a)
is.character(a)
# -----------------------------------------------------------------
# Variables en el espacio de trabajo
# -----------------------------------------------------------------
ls()
diasMes <- c(31,29,31,30,31,30,31,31,30,31,30,31) #crea un vector con una cadena de #s
dias <- c('Lun','Mar','Mi?','Jue','Vie','S?b','Dom') # crea un vector con los dias de la semana
diasMes
dias
quincena # imprime la variable quincena
?seq
semanas <- seq(from=1,to=365,by=0.5)
semanas
help(rep) # muestra la ayuda de rep :
dias.semana <- 1:7
?rep
rep(dias.semana,50)
rep(T,5)
c(rep(T,5),rep(F,5)) #
rep(c(T,F), 5)
# -----------------------------------------------------------------
# Vectores: Acceso al contenido
# -----------------------------------------------------------------
length(dias)
dias[2]  	# Solo el segundo elemento
length(5) # TAMAÑO DEL VECTOR 5
# -----------------------------------------------------------------
# Vectores: Generaci?n de valores aleatorios
# -----------------------------------------------------------------
set.seed(4242) #semilla fija
pnorm(q = -3, mean = 0, sd = 1) # infinito hacia la izquierda
sd = 1
help(sd)
pnorm(c(-3)
pnorm(c(-3), mean=0, sd=1, lower.tail=FALSE) #cambia de sentido - FALSE
help(rnorm)
x<-rnorm(100, mean=30, sd=10) # distribucion normal
rnorm(100, mean=30, sd=10)
1*30/10
1/30*10
?hist
hist(x) # La función genérica hist calcula un histograma de los valores de datos dados.
help(runif)
#Loteria
#distribución uniforme: genera desviaciones aleatorias entre un rango de numeros
loto <- as.integer(runif(6, min=1, max=49)) # Numeros aleatorios
loto
loto
(6, min=1, max=49)
(runif(6, min=1, max=49))
(runif(6, min=1, max=49))
(runif(6, min=1, max=49))
(runif(6, min=1, max=49))
as.integer(runif(6, min=1, max=49))
as.integer(runif(6, min=1, max=49))
as.integer(runif(6, min=1, max=49))
as.integer(runif(6, min=1, max=49))
loto
help(runif)
loto
help(runif)
help(runif)
loto
prev <- par(mfrow=c(2,2)) #par: parametros graficos
hist(rnorm(1000))
hist(runif(1000))
par(prev)
par(mfrow=c(2,2))
prev <- par(mfrow=c(3,2)) #par: parametros graficos
hist(rnorm(1000))
hist(runif(1000))
prev <- par(mfrow=c(1,2)) #par: parametros graficos
hist(rnorm(1000))
hist(runif(1000))
par(prev)
prev <- par(mfrow=c(1,4)) #par: parametros graficos
hist(rnorm(1000)) # genera un histograma con la distribucion normal
hist(runif(1000)) # genera un histograma con la distribucion uniforme
par(prev)
prev <- par(mfrow=c(1,1)) #par: parametros graficos
hist(rnorm(1000)) # genera un histograma con la distribucion normal
hist(runif(1000)) # genera un histograma con la distribucion uniforme
# Diferencia entre rnorm (distribuci?n normal) y runif (distribuci?n uniforme)
?par
rnorm(10)
rnorm(10)
rnorm(10)
plot(vect1,type='l')
(vect1,type='l')
plot(vect1,type='l')
plot(vect1,type='l')
hist(vect1)
plot(vect1,type='l')
# esto no se recomienda a la hora de progamar en R
# preferiblemente no usar for, while, do....
vect3 <- c()
system.time(
for(idx in 1:length(vect1))
vect3[idx] <- vect1[idx] * vect1[idx] + vect2[idx]
)
system.time(vect4 <- vect1 * vect1 + vect2)
stopifnot(vect3 == vect4) # Detener el programa si el resultado no es id?ntico
mes <- matrix(1:35,ncol=7)  # Dos formas de generar exactamente
mes
matrix(1:35,ncol=7)
matrix(1:35,nrow=5)
matrix(1:35,nrow=5,ncol=7,byrow=T)
length(mes)
nrow(mes)
ncol(mes)
dim(mes)
# -----------------------------------------------------------------
# Matrices: Conversi?n de un vector en una matriz
# -----------------------------------------------------------------
vect4
is.matrix(vect4)
dim(vect4)
dim(vect4) <- c(1000, 100)
is.matrix(vect4)
c(1000, 100)
dim(vect4) <- c(1000, 100)
is.matrix(vect4)
dim(vect4)
dim(vect4) <- c(100, 100)
is.matrix(vect4)
dim(vect4) <- c(10, 10)
# -----------------------------------------------------------------
# Matrices: Conversi?n de un vector en una matriz
# -----------------------------------------------------------------
vect4 # imprime el vector 4
dim(vect4) <- c(5, 5)
is.matrix(vect4)
dim(vect4)
dim(vect4) <- c(2, 5)
is.matrix(vect4)
dim(vect4)
# -----------------------------------------------------------------
# Matrices: Conversi?n de un vector en una matriz
# -----------------------------------------------------------------
vect4 # imprime el vector 4
# -----------------------------------------------------------------
# Matrices: Acceso a los elementos
# -----------------------------------------------------------------
mes[2,]
mes[,2]
mes[2,5]
is.matrix(mes)
# -----------------------------------------------------------------
# Matrices: Acceso a los elementos
# -----------------------------------------------------------------
mes[2,]
for(i in ncol(mes))
{
for(j in nrow(mes))
{
mes[j,i]<--1
}
}
mes
